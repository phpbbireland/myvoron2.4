# Notes:
#
# fan_generic       = so it can be controlled manually or via delayed_gcode
# heater_fan        = active when heater active, need to define which: heater: heater_name
# controller_fan    = A "controller fan" is a fan that will be enabled whenever its associated heater
#                     or its associated stepper driver is active.
#                     The fan will stop whenever an idle_timeout is reached to ensure no overheating will occur after deactivating a watched component.
#
# Reference: https://www.klipper3d.org/Config_Reference.html?h=controller#controller_fan
#


#[controller_fan fan_name]
#pin: pin_name         # pin name eg. PD14
#max_power: x.x        # max speed 0.1 - 1.0  read as 10 to 100%
#kick_start_time: x.x  # full speed for x time to make sure fan spins up
#shutdown_speed: x.x   # if error occurs, set speed to 0.0 - 1.0 (0 - 100%) issues with this ???
#idle_timeout: 30      # keep fan active for x seconds after heater (extruder) is turned off (soak up the fumes)
#heater: ?             # extruder or heater_bed
#stepper: ?,?,?        # associated stepper eg. stepper_x, stepper_y, stepper_z, stepper_z1 etc...

#################################################################################
# Notes
#  By default, a heater_fan has a shutdown_speed equal to max_power
#  If shutdown_speed is 1.0, max_power must also be 1.0 to ensure fan
#  continues in the even of a fault condition.
#################################################################################

# Controller fan - FAN0
# pin: PA8
# ...
# Controller fan - FAN1
# pin: PE5
# ...

# Controller fan - FAN2
[controller_fan Pi]
pin: PD12
max_power: 0.5        # might only require 20% speed
kick_start_time: 3.0  # full speed for x to make sure fan spins
shutdown_speed: 0.0   # if error occurs, keep fat at 100%
heater: extruder      # associated heater/stepper
idle_timeout: 30      # keep fan active for x seconds after heater (extruder) is turned off

# Controller fan - FAN3
[fan_generic Nevermore]   #[heater_fan Nevermore_(Filter)]
pin: PD13
max_power: 1.0        # If shutdown_speed is 1.0, max_power must also be 1.0 to ensure fan continues in the even of a fault condition.
shutdown_speed: 1.0   # max_power must first be set to 1.0 if shutdown_speed is set to 1.0.
kick_start_time: 3.0  # full speed for x to make sure fan spins
#heater: extruder      # associated heater/stepper
#fan_speed: 0.2        # full speed for x to make sure fan spins

# Controller fan - FAN4
[controller_fan Driver_Fan]
pin: PD14
max_power: 1.0        # max speed
kick_start_time: 0.5  # full speed for x to make sure fan spins
shutdown_speed: 0.0   # if error occurs, keep fat at 100%
stepper: stepper_x, stepper_y, stepper_z  # associated heater/stepper
idle_timeout: 30      # keep fan active for x seconds after heater (extruder) is turned off

# Controller fan - FAN5
# pin: PD15
# ...

#
# Don't really need macros for manual fans, you can just use the slider... consider this testing gcode ;)
#

[gcode_macro NEVERMORE_ONOFF]
gcode:
    {% if printer['fan_generic Nevermore'].speed > 0 %}
      SET_FAN_SPEED FAN=Nevermore SPEED=0
    {% else %}
      SET_FAN_SPEED FAN=Nevermore SPEED=1
    {% endif %}
 
[gcode_macro NEVERMORE_PLA]
gcode:
      SET_FAN_SPEED FAN=Nevermore SPEED=0.25

[gcode_macro NEVERMORE_ASA]
gcode:
      SET_FAN_SPEED FAN=Nevermore SPEED=1.0
